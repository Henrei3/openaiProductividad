from backend.Model.DB.SQLServerModel import SQLSERVERDBModel
from backend.Controller.pathFinder import JSONFinder
from backend.Controller.analyser import SpeechRefinement


class SQLServerController:
    def __init__(self):
        self.cnxn = SQLSERVERDBModel()

    @staticmethod
    def add_qa_processes(id_grabacion, nombre, scores):
        server = SQLSERVERDBModel()
        server.create_tables()

        telefono = nombre[4:-34]
        fecha = nombre[19:-14]

        jsonfinder = JSONFinder("../analysed_records/audio_text")

        audio = jsonfinder.find(nombre)

        refined_audio = SpeechRefinement.refine_speech_textOpenAI(audio['text'])

        server.add_grabaciones(id_grabacion, nombre, telefono, fecha, refined_audio)

        server.add_autogenerated_scores(id_grabacion, scores)

    def get_positive_sentences_from_cedente(self, cedente: str):
        serial_ced = self.cnxn.get_serialced_from_cedente(cedente)
        if serial_ced and self.cnxn.get_positive_sentences(serial_ced[0]):
            return self.cnxn.get_positive_sentences(serial_ced[0])
        cedente_general_ced = self.cnxn.get_serialced_from_cedente("CEDENTE_GENERAL")
        if not cedente_general_ced:
            self.cnxn.setup_cedente_general()
            cedente_general_ced = self.cnxn.get_serialced_from_cedente("CEDENTE_GENERAL")
            return self.cnxn.get_positive_sentences(cedente_general_ced[0])
        else:
            return self.cnxn.get_positive_sentences(cedente_general_ced[0])
